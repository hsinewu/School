[{"code":"declare A=10;","assert":true,"description":"basic assignment"},{"code":"If( Z > 9){ declare B=1;}","assert":true,"description":"if statement"},{"code":"declare D =   1.223E+9;","assert":true,"description":"whitespace, float"},{"code":"declare D = .223E+9;","assert":false,"description":"float missing integer"},{"code":"decl are A=1;","assert":false,"description":"break keyword"},{"code":"declareA=1;","assert":false,"description":"keyword not seperated"},{"code":"declare ZZZ=10;declare XXX=01;","assert":true,"description":"muti assignment"},{"code":"declare 10=10;","assert":false,"description":"missing id"},{"code":"declare a=10;","assert":false,"description":"lowercase id"},{"code":"declare AASD123AZ13=ASCF123;","assert":true,"description":"assign id to id"},{"code":"declare AS19=1+2*(3+4)/5+1.23E-6;  ","assert":true,"description":"expression, whitespace at the end"},{"code":"declare GG=3;$","assert":true,"description":"$ as EOF"},{"code":"If(A>1){declare D=0;declare E=9;}","assert":true,"description":"comples If"},{"code":"declare Q=-1","assert":false,"description":"nagative number not defined"}]